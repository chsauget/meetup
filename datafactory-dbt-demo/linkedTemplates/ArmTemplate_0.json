{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-dbt-demo"
		},
		"SQL_AdventureWorks_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_AdventureWorks'"
		},
		"ADLS_Demo_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagedbtdemo.dfs.core.windows.net/"
		},
		"KEYV_Demo_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvault-dbt-demo.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/2 - Transform with dbt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WEB - Run dbt model on Container App",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "WEB - Get Storage SAS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WEB - Get ContainerApp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://@{activity('WEB - Get ContainerApp').output.properties.configuration.ingress.fqdn}/dbt",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@json(\n    concat(\n        '{\"account_url\":\"'\n        ,'https://'\n        ,pipeline().parameters.StorageAccountName\n        ,'.blob.core.windows.net/'\n        ,pipeline().parameters.ContainerName\n        ,activity('WEB - Get Storage SAS').output.value\n        ,'\", \"project_name\":\"'\n        ,pipeline().parameters.ProjectName\n        ,'\"}'\n    )\n)",
								"type": "Expression"
							},
							"httpRequestTimeout": "00:10:00"
						}
					},
					{
						"name": "WEB - Get Storage SAS",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@{pipeline().globalParameters.KeyVaultUrl}/secrets/StorageSASToken?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WEB - Get ContainerApp",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://management.azure.com/subscriptions/@{pipeline().globalParameters.SubscriptionId}/resourceGroups/@{pipeline().globalParameters.ResourceGroup}/providers/Microsoft.App/containerApps/@{pipeline().globalParameters.ContainerAppName}?api-version=2022-03-01",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProjectName": {
						"type": "string",
						"defaultValue": "dbt"
					},
					"StorageAccountName": {
						"type": "string",
						"defaultValue": "storagedbtdemo"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "dbt"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Demo_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KEYV_Demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KEYV_Demo_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_AdventureWorks_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Demo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Path",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_AdventureWorks",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_AdventureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_AdventureWorks_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_AdventureWorks",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string",
						"defaultValue": "SalesLT"
					},
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_AdventureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DTBKS_Demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-1123313799261974.14.azuredatabricks.net",
					"clusterId": "1111-190328-6i6kjgy",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KEYV_Demo",
							"type": "LinkedServiceReference"
						},
						"secretName": "DatabricksAccessToken"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KEYV_Demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBKS_DeltaLakeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DTBKS_Demo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Database": {
						"type": "string",
						"defaultValue": "adventureworks"
					},
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": {
						"value": "@dataset().Database",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DTBKS_Demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1 - Extract and Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOOK - Get Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n[Schema] = OBJECT_SCHEMA_NAME(object_id)\n,[Table] = name\nFROM sys.tables\nWHERE OBJECT_SCHEMA_NAME(object_id) = 'SalesLT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_AdventureWorks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FOR - Extract Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LOOK - Get Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LOOK - Get Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "COPY - Data to Databricks",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:15:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().Schema}.@{item().Table}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureDatabricksDeltaLakeSink",
											"preCopyScript": {
												"value": "TRUNCATE TABLE adventureworks.@{toLower(item().Table)}",
												"type": "Expression"
											},
											"importSettings": {
												"type": "AzureDatabricksDeltaLakeImportCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ADLS_Demo",
												"type": "LinkedServiceReference"
											},
											"path": "data/temp"
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_AdventureWorks",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DBKS_DeltaLakeTable",
											"type": "DatasetReference",
											"parameters": {
												"Database": "adventureworks",
												"Table": {
													"value": "@toLower(item().Table)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_AdventureWorks')]",
				"[concat(variables('factoryId'), '/datasets/DBKS_DeltaLakeTable')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0 - Main pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest - Data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1 - Extract and Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Work - dbt",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Ingest - Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 - Transform with dbt",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1 - Extract and Load')]",
				"[concat(variables('factoryId'), '/pipelines/2 - Transform with dbt')]"
			]
		}
	]
}