{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c24ef419-76bf-4265-bb0d-e3e3f3086be2/resourceGroups/PlayGround/providers/Microsoft.Synapse/workspaces/playgroundeu/bigDataPools/spark",
				"name": "spark",
				"type": "Spark",
				"endpoint": "https://playgroundeu.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 4,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"AcceptedAnswerId"
							],
							"values": [
								"Id"
							],
							"yLabel": "Id",
							"xLabel": "AcceptedAnswerId",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"aggData": "{\"Id\":{\"0\":23723993,\"2965533\":2965497,\"2965546\":2965495}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": false
					}
				},
				"source": [
					"%%pyspark\n",
					"df = spark.read.load('abfss://lake@synapseplaygroundeu.dfs.core.windows.net/StackOverflow/Full/dbo.Posts.parquet', format='parquet')\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import year, month, dayofmonth, hour, minute, second\n",
					"df_final = df.withColumn(\"year\", year(df[\"CreatedDate\"])) \\\n",
					"                .withColumn(\"month\", month(df[\"CreatedDate\"])) \\\n",
					"                .withColumn(\"day\", dayofmonth(df[\"CreatedDate\"])) \\\n",
					"                .withColumn(\"hour\", hour(df[\"CreatedDate\"])) \\\n",
					"                .withColumn(\"minute\", minute(df[\"CreatedDate\"])) \\\n",
					"                .withColumn(\"second\", second(df[\"CreatedDate\"])) \\\n",
					"\n",
					"\n",
					"df_final.write.partitionBy(\"year\",\"month\",\"day\",\"hour\",\"minute\",\"second\").mode(\"overwrite\").parquet(\"abfss://lake@synapseplaygroundeu.dfs.core.windows.net/StackOverflow/Partitioned/1Row1File/Posts\")"
				],
				"execution_count": null
			}
		]
	}
}