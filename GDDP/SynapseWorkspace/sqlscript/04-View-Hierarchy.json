{
	"name": "04-View-Hierarchy",
	"properties": {
		"folder": {
			"name": "ServerlessPool"
		},
		"content": {
			"query": "--USE [ServerlessPool]\n--GO\n\nCREATE OR ALTER VIEW [dbo].[PipelineLogsHierarchy] AS\nWITH RawData AS\n(\n    SELECT \n        [SubscriptionId] = CAST([r].filepath(1) AS VARCHAR(36))\n        ,[ResourceGroup] = CAST([r].filepath(2) AS VARCHAR(100))\n        ,[FactoryName] = CAST([r].filepath(3) AS VARCHAR(100))\n        ,[Year] = CAST([r].filepath(4) AS VARCHAR(4))\n        ,[Month] = CAST([r].filepath(5) AS VARCHAR(2))\n        ,[Day] = CAST([r].filepath(6) AS VARCHAR(2))\n        ,[Hour] = CAST([r].filepath(7) AS VARCHAR(2))\n        ,[PipelineRunId] = CAST(JSON_VALUE(jsonContent, '$.runId') AS VARCHAR(100))\n        ,[PipelineName] = CAST(JSON_VALUE(jsonContent, '$.pipelineName') AS VARCHAR(100))\n        ,[Time] = TRY_CAST(JSON_VALUE(jsonContent, '$.time') AS DATETIME2(3))\n        ,[Start] = TRY_CAST(JSON_VALUE(jsonContent, '$.start') AS DATETIME2(0))\n        ,[End] = NULLIF(TRY_CAST(JSON_VALUE(jsonContent, '$.end') AS DATETIME2(0)),'1601-01-01 00:00:00.0000000') \n        ,[Status] = CAST(JSON_VALUE(jsonContent, '$.status') AS VARCHAR(100))\n        ,[EnvironmentName] = CAST(JSON_VALUE(JSON_VALUE(jsonContent, '$.tags'),'$.EnvironmentName') AS VARCHAR(100))\n        ,[ErrorMessage] = CAST(NULLIF(JSON_VALUE(JSON_QUERY(jsonContent,'$.properties'), '$.Message'),'') AS VARCHAR(500))\n        ,[LastStatus] = LAST_VALUE(JSON_VALUE(jsonContent, '$.status')) \n                            OVER (PARTITION BY JSON_VALUE(jsonContent, '$.runId') ORDER BY NULLIF(TRY_CAST(JSON_VALUE(jsonContent, '$.end') AS DATETIME2(0)),'1601-01-01 00:00:00.0000000') \n                            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n        ,[PipelineExecutionOrder] = DENSE_RANK()OVER(PARTITION BY JSON_VALUE(jsonContent, '$.pipelineName') ORDER BY CAST(JSON_VALUE(jsonContent, '$.end') AS DATETIME2) DESC)\n        ,[PredecessorPipelineName] = JSON_VALUE(Predecessors.value, '$.PipelineName')\n        ,[PredecessorPipelineId] = JSON_VALUE(Predecessors.value, '$.PipelineRunId')\n    FROM\n        OPENROWSET(\n            BULK 'https://staplaygroundlogs.blob.core.windows.net/insights-logs-pipelineruns/resourceId=/SUBSCRIPTIONS/*/RESOURCEGROUPS/*/PROVIDERS/MICROSOFT.DATAFACTORY/FACTORIES/*/y=*/m=*/d=*/h=*/m=*/*.json'\n            , FORMAT = 'CSV'\n            , FIELDTERMINATOR = '0x0b'\n            , FIELDQUOTE = '0x0b'\n        ) WITH (\n            jsonContent VARCHAR(max)\n        ) AS [r]\n        CROSS APPLY OPENJSON(JSON_QUERY(jsonContent, '$.properties.Predecessors')) AS Predecessors\n), DataPreparation as (\n    SELECT \n        m.*\n        ,[Start_LocalTime] = CONVERT(datetime, SWITCHOFFSET([Start], DATEPART(TZOFFSET, [Start] AT TIME ZONE 'Romance Standard Time')))\n        ,[End_LocalTime] = CONVERT(datetime, SWITCHOFFSET([End], DATEPART(TZOFFSET, [End] AT TIME ZONE 'Romance Standard Time')))\n        ,[Now_LocalTime] = CONVERT(datetime, SWITCHOFFSET(GETDATE(), DATEPART(TZOFFSET, GETDATE() AT TIME ZONE 'Romance Standard Time')))\n        ,[MaxTime] = MAX([Time]) OVER (PARTITION BY [PipelineRunId])\n        ,[ExecutionNumber] = DENSE_RANK() OVER (PARTITION BY [PipelineName] ORDER BY [Start])\n        ,[Status icon] = CASE m.[Status] \n            WHEN 'Succeeded' THEN N'✔️ Succeeded'\n            WHEN 'Failed' THEN N'❌ Failed'\n            WHEN 'Cancelled' THEN N'⛔️ Cancelled'\n            WHEN 'InProgress' THEN N'▶️ In progress'\n            WHEN 'Queued' THEN N'⏸ Queued'\n            END\n    FROM\n        RawData m\n)\nSELECT\n    Lvl0.[SubscriptionId]\n    ,Lvl0.[ResourceGroup]\n    ,Lvl0.[FactoryName]\n    ,Lvl0.[EnvironmentName]\n    ,Lvl0.[Now_LocalTime]\n    --\n    ,[PipelineRunId Level 0] = Lvl0.[PipelineRunId]\n    ,[PipelineName Level 0] = CONCAT(Lvl0.[PipelineName],' #',Lvl0.[ExecutionNumber])\n    ,[Status Level 0] = Lvl0.[Status]\n    ,[Status icon Level 0] = Lvl0.[Status icon]\n    ,[ErrorMessage Level 0] = Lvl0.[ErrorMessage]\n    ,[Start_LocalTime Level 0] = Lvl0.[Start_LocalTime]\n    ,[End_LocalTime Level 0] = Lvl0.[End_LocalTime]\n    ,[Duration (second) Level 0] = DATEDIFF(SECOND, Lvl0.[Start], COALESCE(Lvl0.[End], GETDATE()))\n    ,[Duration Level 0] = CONVERT(varchar(8), DATEADD(ms, \n        DATEDIFF(SECOND, Lvl0.[Start], COALESCE(Lvl0.[End], GETDATE()))\n        * 1000, 0), 114)\n    ,[PipelineRunUrl Level 0] = CONCAT(\n        'https://adf.azure.com/monitoring/pipelineruns/', Lvl0.[PipelineRunId]\n        ,'?factory=%2Fsubscriptions%2F', Lvl0.[SubscriptionId]\n        ,'%2FresourceGroups%2F', Lvl0.[ResourceGroup]\n        ,'%2Fproviders%2FMicrosoft.DataFactory%2Ffactories%2F',Lvl0.[FactoryName]\n        )\n    --\n    ,[PipelineRunId Level 1] = Lvl1.[PipelineRunId]\n    ,[PipelineName Level 1] = Lvl1.[PipelineName]\n    ,[Status Level 1] = Lvl1.[Status]\n    ,[Status icon Level 1] = Lvl1.[Status icon]\n    ,[ErrorMessage Level 1] = Lvl1.[ErrorMessage]\n    ,[Start_LocalTime Level 1] = Lvl1.[Start_LocalTime]\n    ,[End_LocalTime Level 1] = Lvl1.[End_LocalTime]\n    ,[Duration (second) Level 1] = CASE WHEN Lvl1.[PipelineRunId] IS NOT NULL THEN DATEDIFF(SECOND, Lvl1.[Start], COALESCE(Lvl1.[End], GETDATE())) END\n    ,[Duration Level 1] = CASE WHEN Lvl1.[PipelineRunId] IS NOT NULL THEN \n        CONVERT(varchar(8), DATEADD(ms, \n            DATEDIFF(SECOND, Lvl1.[Start], COALESCE(Lvl1.[End], GETDATE()))\n            * 1000, 0), 114)\n        END\n    ,[PipelineRunUrl Level 1] = CASE WHEN Lvl1.[PipelineRunId] IS NOT NULL THEN \n        CONCAT(\n            'https://adf.azure.com/monitoring/pipelineruns/', Lvl1.[PipelineRunId]\n            ,'?factory=%2Fsubscriptions%2F', Lvl1.[SubscriptionId]\n            ,'%2FresourceGroups%2F', Lvl1.[ResourceGroup]\n            ,'%2Fproviders%2FMicrosoft.DataFactory%2Ffactories%2F',Lvl1.[FactoryName]\n            )\n        END\n    --\n    ,[PipelineRunId Level 2] = Lvl2.[PipelineRunId]\n    ,[PipelineName Level 2] = Lvl2.[PipelineName]\n    ,[Status Level 2] = Lvl2.[Status]\n    ,[Status icon Level 2] = Lvl2.[Status icon]\n    ,[ErrorMessage Level 2] = Lvl2.[ErrorMessage]\n    ,[Start_LocalTime Level 2] = Lvl2.[Start_LocalTime]\n    ,[End_LocalTime Level 2] = Lvl2.[End_LocalTime]\n    ,[Duration (second) Level 2] = CASE WHEN Lvl2.[PipelineRunId] IS NOT NULL THEN DATEDIFF(SECOND, Lvl2.[Start], COALESCE(Lvl2.[End], GETDATE())) END\n    ,[Duration Level 2] = CASE WHEN Lvl2.[PipelineRunId] IS NOT NULL THEN \n        CONVERT(varchar(8), DATEADD(ms, \n            DATEDIFF(SECOND, Lvl2.[Start], COALESCE(Lvl2.[End], GETDATE()))\n            * 1000, 0), 114)\n        END\n    ,[PipelineRunUrl Level 2] = CASE WHEN Lvl2.[PipelineRunId] IS NOT NULL THEN \n        CONCAT(\n            'https://adf.azure.com/monitoring/pipelineruns/', Lvl2.[PipelineRunId]\n            ,'?factory=%2Fsubscriptions%2F', Lvl2.[SubscriptionId]\n            ,'%2FresourceGroups%2F', Lvl2.[ResourceGroup]\n            ,'%2Fproviders%2FMicrosoft.DataFactory%2Ffactories%2F',Lvl2.[FactoryName]\n            )\n        END\nFROM DataPreparation Lvl0\n    LEFT JOIN DataPreparation Lvl1 ON \n        Lvl1.[PredecessorPipelineId] = Lvl0.[PipelineRunId] \n        AND Lvl1.[Time] = Lvl1.[MaxTime]\n    LEFT JOIN DataPreparation Lvl2 ON \n        Lvl2.[PredecessorPipelineId] = Lvl1.[PipelineRunId]\n        AND Lvl2.[Time] = Lvl2.[MaxTime]\nWHERE \n    Lvl0.[Time] = Lvl0.[MaxTime]\n    AND\tLvl0.[PredecessorPipelineId] IS NULL\nGO\n\nSELECT *\nFROM [dbo].[PipelineLogsHierarchy] ",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "ServerlessPool",
				"type": "SqlOnDemand"
			}
		},
		"type": "SqlQuery"
	}
}