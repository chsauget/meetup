{
	"name": "Tests 1",
	"properties": {
		"content": {
			"query": "\n;with devices as (\n    SELECT rowsdevices.*\n    FROM OPENROWSET(\n        PROVIDER = 'CosmosDB',\n        CONNECTION = 'Account=playgroundeu2;Database=Volcano;',\n        OBJECT = 'IoTDeviceInfo',\n        SERVER_CREDENTIAL  = 'MyCosmosDbAccountCredential'\n        ) as rowsdevices\n)\nSELECT rows.*, devices.Rotortype\nFROM OPENROWSET(\n      PROVIDER = 'CosmosDB',\n      CONNECTION = 'Account=playgroundeu2;Database=Volcano;',\n      OBJECT = 'IoTSignals',\n      SERVER_CREDENTIAL  = 'MyCosmosDbAccountCredential'\n    ) as rows\ninner join devices on devices.Deviceid=rows.DeviceId\n\n\nselect a.Deviceid \n        , b.Devicetype \n        , cast(b.Location as varchar(128)) as Location\n        , cast(b.Latitude as float) as Latitude\n        , cast(b.Longitude as float) as  Longitude\n        , a.Measuretype \n        , a.UnitSymbol \n        , cast(sum(MeasureValue) as float) as MeasureValueSum \n        , count(*) as count \nfrom OPENROWSET(\n    PROVIDER = 'CosmosDB',\n    CONNECTION = 'Account=playgroundeu2;Database=Volcano;',\n    OBJECT = 'IoTSignals',\n    SERVER_CREDENTIAL  = 'MyCosmosDbAccountCredential'\n    ) as a \nleft join OPENROWSET(\n        PROVIDER = 'CosmosDB',\n        CONNECTION = 'Account=playgroundeu2;Database=Volcano;',\n        OBJECT = 'IoTDeviceInfo',\n        SERVER_CREDENTIAL  = 'MyCosmosDbAccountCredential'\n        ) as b \non a.Deviceid = b.Deviceid \nwhere a.unitSymbol = 'RPM' \ngroup by a.Deviceid, b.Devicetype, b.Location, b.Latitude, b.Longitude, a.Measuretype, a.UnitSymbol\n\n\n-- SELECT *\n-- FROM OPENROWSET(\n--       PROVIDER = 'CosmosDB',\n--       CONNECTION = 'Account=playgroundeu2;Database=Volcano;',\n--       OBJECT = 'Volcano',\n--       SERVER_CREDENTIAL  = 'MyCosmosDbAccountCredential'\n--     ) as rows\n    \n    -- OPENROWSET( \n--        'CosmosDB',\n--        'Account=playgroundeu2;Database=Volcano;Key=EgHlSUqq4Z4Hfr7JaAHO90CEAlgR9qolpGcoKNC02LabD3xZyF9MsQA1N3WEzbN5s56dlWF30MxaeFYCR3wO1Q==;\n--        Volcano) as r\n\n    --with ( date_rep varchar(20), cases bigint, geo_id varchar(6) ) as rows\n\n    -- paper_id\tvarchar(8000),\n    --     title        varchar(1000) '$.metadata.title',\n    --     metadata     varchar(max),\n    --     authors      varchar(max) '$.metadata.authors'",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "master",
				"type": "SqlOnDemand"
			}
		},
		"type": "SqlQuery"
	}
}